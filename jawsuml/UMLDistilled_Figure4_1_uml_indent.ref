parsetree = \
(   'diagram:',
    (   'sequenceDiagram:',
        'Figure4.1',
        '{',
        (   '@',
            "\n    // This diagram of Figure 4.1 has relatively few comments because it is\n    // missing from Genevieve's book of tactile diagrams. See\n    // UMLDistilled.Figure4.2.txt for a full set of comments.\n    ",
            '@'),
        (   'sequence-list:',
            ('object:', 'object', 'anOrder', ('type:', 'Order'), '{', '}'),
            (   'object:',
                'object',
                'anOrderLine',
                ('type:', 'OrderLine'),
                '{',
                '}'),
            (   'object:',
                'object',
                'aProduct',
                ('type:', 'Product'),
                '{',
                '}'),
            (   'object:',
                'object',
                'aCustomer',
                ('type:', 'Customer'),
                '{',
                '}'),
            (   'call:',
                '?',
                'calls',
                'anOrder.calculatePrice',
                '(',
                ')',
                ';',
                (   '@',
                    ' "?" means a call come in from outside the displayed set of objects. ',
                    '@')),
            (   'call:',
                'anOrder.calculatePrice()',
                'calls',
                'anOrderLine.getQuantity',
                '(',
                ')',
                ';'),
            (   'call:',
                'anOrder.calculatePrice()',
                'calls',
                'anOrderLine.getProduct',
                '(',
                ')',
                ';'),
            (   'return:',
                'anOrderLine.getProduct()',
                'returns',
                'aProduct',
                'to',
                'anOrder.calculatePrice()',
                ';',
                (   '@',
                    '\n    // aProduct is the return value to object anOrder from its\n    // method call to anOrderLine.getProduct(). Showing return\n    // values is optional in a UML sequence diagram, and is used to\n    // emphasize the data being returned from a method call.\n    // The Syntax for a return value is:\n    // CALLEDMETHOD returns VALUE to CALLER\n    // or "CALLEDMETHOD returns to CALLER" when there is no value to return.\n    ',
                    '@')),
            (   'call:',
                'anOrder.calculatePrice()',
                'calls',
                'aProduct.getPricingDetails',
                '(',
                ')',
                ';'),
            (   'call:',
                'anOrder.calculatePrice()',
                'calls',
                'anOrder.calculateBasePrice',
                '(',
                ')',
                ';',
                (   '@',
                    '\n    // anOrder.calculatePrice() activation calls method\n    // calculateBasePrice() on itself (on its own anOrder object).\n    ',
                    '@')),
            (   'call:',
                'anOrder.calculatePrice()',
                'calls',
                'anOrder.calculateDiscounts',
                '(',
                ')',
                ';'),
            (   'call:',
                'anOrder.calculateDiscounts()',
                'calls',
                'aCustomer.getDiscountInfo',
                '(',
                ')',
                ';')),
        '}'))
