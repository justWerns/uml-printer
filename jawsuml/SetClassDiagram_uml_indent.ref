parsetree = \
(   'diagram:',
    (   'classDiagram:',
        'SetClassDiagram',
        '{',
        (   '@',
            ' This is a class diagram of interface java.util.Set and\n    related interfaces and classes from package java.util\n    for CSC520 Advanced Object Oriented Programming, Spring 2016,\n    D. Parson. Exam Question 5.\n    ',
            '@'),
        (   'class-sequence:',
            (   'package:',
                'java.util',
                '{',
                (   'package-contents:',
                    (   'interface:',
                        'interface',
                        'Iterable<T>',
                        '{',
                        (   'class-contents:',
                            (   'method:',
                                '+',
                                'iterator',
                                '(',
                                ')',
                                ('type:', 'Iterator<T>'),
                                ';')),
                        '}',
                        (   'association-list:',
                            ('uses:', 'Iterator<E>'),
                            ';')),
                    (   'interface:',
                        'interface',
                        'Iterator<E>',
                        '{',
                        (   'class-contents:',
                            (   'method:',
                                '+',
                                'hasNext',
                                '(',
                                ')',
                                ('type:', 'boolean'),
                                ';'),
                            (   'method:',
                                '+',
                                'next',
                                '(',
                                ')',
                                ('type:', 'E'),
                                ';'),
                            (   'method:',
                                '+',
                                'remove',
                                '(',
                                ')',
                                ('type:', 'void'),
                                ';')),
                        '}'),
                    (   'interface:',
                        'interface',
                        'Collection<E>',
                        ('extends', 'Iterable<T>'),
                        '{',
                        (   'class-contents:',
                            (   'method:',
                                '+',
                                'add',
                                '(',
                                ('param-list:', ('e', ('type:', 'E'))),
                                ')',
                                ('type:', 'boolean'),
                                ';'),
                            (   'method:',
                                '+',
                                'contains',
                                '(',
                                (   'param-list:',
                                    ('o', ('type:', 'Object'))),
                                ')',
                                ('type:', 'boolean'),
                                ';'),
                            (   'method:',
                                '+',
                                'remove',
                                '(',
                                (   'param-list:',
                                    ('o', ('type:', 'Object'))),
                                ')',
                                ('type:', 'boolean'),
                                ';'),
                            (   'method:',
                                '+',
                                'size',
                                '(',
                                ')',
                                ('type:', 'int'),
                                ';')),
                        '}'),
                    (   'interface:',
                        'interface',
                        'Set<E>',
                        ('extends', 'Collection<E>'),
                        '{',
                        (   'class-contents:',
                            (   'method:',
                                '+',
                                'add',
                                '(',
                                ('param-list:', ('e', ('type:', 'E'))),
                                ')',
                                ('type:', 'boolean'),
                                ';'),
                            (   'method:',
                                '+',
                                'contains',
                                '(',
                                (   'param-list:',
                                    ('o', ('type:', 'Object'))),
                                ')',
                                ('type:', 'boolean'),
                                ';'),
                            (   'method:',
                                '+',
                                'remove',
                                '(',
                                (   'param-list:',
                                    ('o', ('type:', 'Object'))),
                                ')',
                                ('type:', 'boolean'),
                                ';'),
                            (   'method:',
                                '+',
                                'size',
                                '(',
                                ')',
                                ('type:', 'int'),
                                ';')),
                        '}'),
                    (   'class:',
                        ('abstract',),
                        'class',
                        'AbstractCollection<E>',
                        ('implements', 'Collection<E>'),
                        '{',
                        '}'),
                    (   'class:',
                        ('abstract',),
                        'class',
                        'AbstractSet<E>',
                        (   'implements',
                            'Set<E>',
                            'extends',
                            'AbstractCollection<E>'),
                        '{',
                        '}'),
                    (   'class:',
                        'class',
                        'HashSet<E>',
                        ('extends', 'AbstractSet<E>'),
                        '{',
                        '}'),
                    (   'interface:',
                        'interface',
                        'SortedSet<E>',
                        ('extends', 'Set<E>'),
                        '{',
                        '}'),
                    (   'interface:',
                        'interface',
                        'NavigableSet<E>',
                        ('extends', 'SortedSet<E>'),
                        '{',
                        (   '@',
                            '\n            For the exam question I am not holding you to modeling\n            NavigableSet & SortedSet, because I am requiring only as much\n            detail as was modeled for the List example in the first week.\n            UML models can elide whatever details you find appropriate.\n            However, NavigableSet & SortedSet do relate to Set, so ideally we\n            should model them here.\n            ',
                            '@'),
                        '}'),
                    (   'class:',
                        'class',
                        'TreeSet<E>',
                        (   'implements',
                            'NavigableSet<E>',
                            'extends',
                            'AbstractSet<E>'),
                        '{',
                        '}'),
                    (   'class:',
                        'class',
                        'ClientCodeClass',
                        '{',
                        '}',
                        (   'association-list:',
                            ('uses:', 'Iterator<E>'),
                            ('uses:', 'Set<E>'),
                            ';'))),
                '}')),
        '}'))
