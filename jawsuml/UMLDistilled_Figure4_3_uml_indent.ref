parsetree = \
(   'diagram:',
    (   'sequenceDiagram:',
        'Figure4.3',
        '{',
        (   '@',
            '\n    // Textbook says: Creation and deletion of participants.\n    // It shows the equivalent of C++ or Java "new" to create an\n    // object during the execution of the sequence calls. Also,\n    // a Symbol called "destructs" shows the deletion of an object\n    // from the diagram.\n    ',
            '@'),
        (   'sequence-list:',
            (   'object:',
                'object',
                'aHandler',
                ('type:', 'Handler'),
                '{',
                '}'),
            ('call:', '?', 'calls', 'aHandler.queryDatabase', '(', ')', ';'),
            (   'call:',
                'aHandler.queryDatabase()',
                'calls',
                'QueryCommand.new',
                '(',
                ')',
                ('constructs:', 'aQueryCommand'),
                ';',
                (   '@',
                    '\n    // This diagram does not declare "object aQueryCommand QueryCommand"\n    // at the top because the object comes into existence during execution\n    // of the sequence diagram by way of the new operator in C++ or Java.\n    // The above call actually creates the aQueryCommand by invoking "new".\n    // The constructs clause shows the name of the object created.\n    ',
                    '@')),
            (   'call:',
                'aQueryCommand',
                'calls',
                'DatabaseStatement.new',
                '(',
                ')',
                ('constructs:', 'aDatabaseStatement'),
                ';',
                (   '@',
                    ' The diagram does not show what method is running within aQueryCommand. ',
                    '@')),
            (   'call:',
                'aQueryCommand',
                'calls',
                'aDatabaseStatement.execute',
                '(',
                ')',
                ';'),
            (   'send:',
                'aDatabaseStatement.execute()',
                'sends',
                'results',
                'to',
                'aQueryCommand',
                ';',
                (   '@',
                    ' The textbook shows above line as an asynchronous return statement. ',
                    '@')),
            (   'call:',
                'aQueryCommand',
                'calls',
                'aQueryCommand.extractResults',
                '(',
                ')',
                ';'),
            (   'call:',
                'aQueryCommand',
                'calls',
                'aDatabaseStatement.close',
                '(',
                ')',
                ';',
                (   '@',
                    ' A final call from aQueryCommand object to aDatabaseStatement object. ',
                    '@')),
            (   'destruct:',
                'aDatabaseStatement.close()',
                'destructs',
                'aDatabaseStatement',
                ';'),
            (   'send:',
                'aQueryCommand',
                'sends',
                'results',
                'to',
                'aHandler.results',
                ';'),
            (   'destruct:',
                'aQueryCommand',
                'destructs',
                'aQueryCommand',
                ';',
                (   '@',
                    ' The aQueryCommand objects deletes itself. Textbook says "self-deletion".',
                    '@'))),
        '}'))
