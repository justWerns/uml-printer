parsetree = \
(   'diagram:',
    (   'classDiagram:',
        'DynamicDispatchCompiledClass',
        '{',
        (   '@',
            "\n    Illustrate the way C++ and Java compile pointers to methods\n    (C++ virtual functions) into the objects. An object's constructor\n    actually initialtizes these pointer attributes; the compiler generates\n    code to initialize the fields as part of the constructor, and the\n    linker resolves the actual address of the code. D. Parson, spring 2016.\n    ",
            '@'),
        (   'class-sequence:',
            (   'class:',
                'class',
                'baseclass',
                '{',
                (   'class-contents:',
                    ('method:', '+', 'method_A', '(', ')', ';'),
                    ('method:', '+', 'method_B', '(', ')', ';'),
                    (   'attribute:',
                        '-',
                        'pointerTo_baseclass_statics',
                        ';',
                        (   '@',
                            ' baseclass has a static vtable[2] -- virtual function table ',
                            '@')),
                    (   'attribute:',
                        '-',
                        ('static',),
                        'pointerTo_method_A',
                        '=addressOf_baseclass_method_A',
                        ';'),
                    (   'attribute:',
                        '-',
                        ('static',),
                        'pointerTo_method_B',
                        '=addressOf_baseclass_method_B',
                        ';')),
                '}'),
            (   'class:',
                'class',
                'derivedclass',
                ('extends', 'baseclass'),
                '{',
                (   '@',
                    ' method_A() is inherited from baseclass without redefinition. ',
                    '@'),
                (   'class-contents:',
                    ('method:', '+', 'method_B', '(', ')', ';'),
                    ('method:', '+', 'method_C', '(', ')', ';'),
                    (   'attribute:',
                        '-',
                        'pointerTo_derivedclass_statics',
                        ';',
                        (   '@',
                            ' derivedclass has a static vtable[3] -- virtual function table ',
                            '@')),
                    (   'attribute:',
                        '-',
                        ('static',),
                        'pointerTo_method_A',
                        '=addressOf_baseclass_method_A',
                        ';'),
                    (   'attribute:',
                        '-',
                        ('static',),
                        'pointerTo_method_B',
                        '=addressOf_derivedclass_method_B',
                        ';'),
                    (   'attribute:',
                        '-',
                        ('static',),
                        'pointerTo_method_C',
                        '=addressOf_derivedclass_method_C',
                        ';')),
                '}')),
        '}'))
